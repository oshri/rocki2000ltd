{"version":3,"file":"static/webpack/static/development/pages/index.js.8d750318f2c6d889e433.hot-update.js","sources":["webpack:///./components/DropDownNavbar/DropDownsContainer/index.js"],"sourcesContent":["import React from \"react\";\n\nlet prevBoundingRect = null;\n\nconst transition = \"all 0.3s cubic-bezier(.785,.135,.15,.86)\";\nconst transformOrigin = \"left top\";\n\nconst playAnimation = elements => {\n  if (elements.length > 0) {\n    elements.forEach(playAnimation);\n  } else {\n    elements.style.transition = transition;\n    elements.style.transform = \"none\";\n  }\n};\n\nclass DropDownsContainer extends React.Component {\n  componentWillUnmount() {\n    prevBoundingRect = this.currentDropDown.getBoundingClientRect();\n  }\n\n  componentDidMount() {\n    this.currentDropDown = this.dropDownsWrapper;\n    if (prevBoundingRect) {\n      const currentBoundingRect = this.currentDropDown.getBoundingClientRect();\n\n      const deltaLeft = prevBoundingRect.x - currentBoundingRect.x;\n      const deltaWidth = prevBoundingRect.width / currentBoundingRect.width;\n      const deltaHeight = prevBoundingRect.height / currentBoundingRect.height;\n\n      const inversDeltaWidth = currentBoundingRect.width / prevBoundingRect.width;\n      const inverseDeltaHeight = currentBoundingRect.height / prevBoundingRect.height;\n\n      this.currentDropDown.style.transformOrigin = transformOrigin;\n      this.currentDropDown.style.transform = `translateX(${deltaLeft}px) scale(${deltaWidth}, ${deltaHeight})`;\n\n      if (this.props.preventDistortion) {\n        this.cancelledOutElements = this.currentDropDown.querySelectorAll(\n          this.props.preventDistortion\n        );\n\n        this.cancelledOutElements.forEach(dropDownSection => {\n          dropDownSection.style.transformOrigin =\n            dropDownSection.dataset.transformOrigin || transformOrigin;\n          dropDownSection.style.transform = `scale(${inversDeltaWidth}, ${inverseDeltaHeight})`;\n        });\n      }\n\n      setTimeout(\n        () =>\n          requestAnimationFrame(() => {\n            playAnimation(this.currentDropDown);\n            playAnimation(this.cancelledOutElements);\n          }),\n        0\n      );\n    }\n  }\n\n  setRef = dropDownsWrapper => (this.dropDownsWrapper = dropDownsWrapper);\n\n  render() {\n    return <div ref={this.setRef}>{this.props.children}</div>;\n  }\n}\n\nexport default DropDownsContainer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AA2CA;AAAA;AAAA;AACA;;;;;;AA3CA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AACA;;;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA/CA;AACA;AAiDA;;;;A","sourceRoot":""}