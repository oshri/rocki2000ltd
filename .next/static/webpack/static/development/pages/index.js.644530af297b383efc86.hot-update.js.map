{"version":3,"file":"static/webpack/static/development/pages/index.js.644530af297b383efc86.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import axios from 'axios';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport fetch from 'isomorphic-fetch';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger'\n\nconst initialState = {\n  navigation: []\n}\n\nexport const actionTypes = {\n  NAVIGATION_LOAD: 'NAVIGATION_LOAD',\n  NAVIGATION_LOAD_SUCCESS: 'NAVIGATION_LOAD_SUCCESS',\n  NAVIGATION_LOAD_ERROR: 'NAVIGATION_LOAD_ERROR',\n  RESET_STORE: 'RESET_STORE'\n}\n\n// REDUCERS\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.NAVIGATION_LOAD_SUCCESS:\n      return Object.assign({}, state, {\n        navigation: action.payload\n      })\n    case actionTypes.RESET_STORE:\n      return Object.assign({}, state, {\n        navigation: initialState.navigation\n      })\n    default: return state\n  }\n}\n\n// ACTIONS\nexport const serverRenderClock = (isServer) => dispatch => {\n  return dispatch({ type: actionTypes.TICK, payload: !isServer })\n}\n\nexport const fetchNavigation = (dispatch) => {\n  return (dispatch) => fetch('http://localhost:4200/api/navigation')\n        .then((res) => res.json())\n        .then(data => {\n          debugger\n          return dispatch({ type: actionTypes.NAVIGATION_LOAD_SUCCESS, payload: data.links })\n        });\n}\n\nexport const navigationLoadSuccess = (payload) =>  dispatch => {\n    dispatch({ type: actionTypes.NAVIGATION_LOAD_SUCCESS, payload: payload})\n}\n\nexport const navigationLoad = () =>  dispatch => {\n  dispatch({ type: actionTypes.NAVIGATION_LOAD})\n}\n\nexport const resetState = () => dispatch => {\n  return dispatch({ type: actionTypes.RESET_STORE })\n}\n\nexport function initializeStore (initialState = initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(logger, thunkMiddleware)))\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AAAA;AATA;AAWA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAMA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AACA;;;;A","sourceRoot":""}